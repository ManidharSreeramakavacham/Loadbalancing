---
 - hosts: all
   gather_facts: yes
   become: true

 - hosts: HAproxy
   become: yes
   tasks:

     - name: installing haproxy
       apt:
         name: haproxy
         state: present

     - name: configuring HAproxy
       template:
               src: haproxy.cfg
               dest: /etc/haproxy/haproxy.cfg

     - name: Restart haproxy
       become: true
       systemd:
          name: haproxy
          state: started


 - hosts: webservers
   remote_user: ubuntu

   tasks:
     - name: installing python
       apt:
         name: python3
         state: present

     - name: installing pip3
       apt:
         name: python3-pip
         state: present

     - name: installing python3-venv
       apt:
         name: python3-venv
         state: present

     - name: flask directory creation
       file:
            path: /home/ubuntu/flask-app
            state: directory

     - name: changing the directory
       shell: cd /home/ubuntu/flask-app

     - name: deploying Flask
       shell: pip3 install Flask

     - name: Creating virtual environment
       file:
         path: /home/ubuntu/flask-app/venv
         state: directory
         mode: '0755'

     - name: Create VirtualEnv
       pip:
         name: Flask
         virtualenv: /home/ubuntu/flask-app/venv

     - name: permission check
       become: yes
       become_user: root
       file:
         path: /home/ubuntu/flask-app/venv
         mode: '0755'
         recurse: yes

     - name: Copy Flask app file
       copy:
         src: app.py
         dest: /home/ubuntu/flask-app/venv/apppy

     - name: Run Flask app
       command: flask run -h 0.0.0.0 -p 5000
       async: 5000
       poll: 0

 - hosts: HAproxy
   become: yes
   tasks:
     - name: test HAproxy 1
       uri:
          url: "http://localhost/"
          return_content:  yes
       register: html_content

     - debug:
         msg: "{{ html_content.content }}"

     - name: test HAproxy 2
       uri:
         url: "http://localhost/"
         return_content:  yes
       register: html_content

     - debug:
         msg: "{{ html_content.content }}"

     - name: test HAproxy 3
       uri:
         url: "http://localhost/"
         return_content:  yes
       register: html_content

     - debug:
         msg: "{{ html_content.contentÂ }}"
